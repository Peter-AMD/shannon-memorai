{"version":3,"sources":["assets lazy /^/.*/.jpg$/ groupOptions: {} namespace object","components/image/util.ts","components/image/image.tsx","components/card/card.tsx","components/cards/util.ts","components/cards/cards.tsx","containers/flipPage/flipPage.tsx","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","loadImage","imageName","setState","a","image","default","Image","name","clickedHandler","useState","setImage","useEffect","onClick","src","alt","Card","open","clickHandler","flipped","setFlipped","imageClicked","prevState","className","isFlipped","infinite","getImagesName","list","counter","push","doubleArray","array","fisherYatesShuffleArray","arrayCopy","i","length","j","Math","floor","random","arrayToCardObject","imagesList","key","matched","Cards","setImagesList","matchChecker","useCallback","openedAndUnmatched","toMatch","prevList","toCloseList","keyList","item","closeTimeout","setTimeout","includes","clearTimeout","closeUnmatchedOpened","every","cardList","flow","index","listCopy","toChangeObject","flipCard","FlipPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c8cdf38.chunk.js","sourcesContent":["var map = {\n\t\"./1.jpg\": [\n\t\t72,\n\t\t3\n\t],\n\t\"./2.jpg\": [\n\t\t73,\n\t\t4\n\t],\n\t\"./3.jpg\": [\n\t\t74,\n\t\t5\n\t],\n\t\"./4.jpg\": [\n\t\t75,\n\t\t6\n\t],\n\t\"./5.jpg\": [\n\t\t76,\n\t\t7\n\t],\n\t\"./6.jpg\": [\n\t\t77,\n\t\t8\n\t],\n\t\"./7.jpg\": [\n\t\t78,\n\t\t9\n\t],\n\t\"./8.jpg\": [\n\t\t79,\n\t\t10\n\t],\n\t\"./9.jpg\": [\n\t\t80,\n\t\t11\n\t],\n\t\"./back.jpg\": [\n\t\t81,\n\t\t12\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 66;\nmodule.exports = webpackAsyncContext;","\nexport const loadImage = async (imageName: string, setState: (image: string) => void) => {\n  const image = await import(`assets/${imageName}.jpg`);\n  setState(image.default);\n}","import { useState, useEffect } from 'react';\nimport { loadImage } from './util';\n\ninterface Props {\n  name: string;\n  clickedHandler: () => void;\n}\n\nconst Image: React.FC<Props> = ({ name, clickedHandler }) => {\n  const [image, setImage] = useState<string>();\n  useEffect(() => {\n    loadImage(name, setImage);\n  }, [name]);\n\n  return (\n    <>\n      {image && (\n        <img onClick={clickedHandler} src={image} alt={`shannon ${name}`} />\n      )}\n    </>\n  );\n};\n\nexport default Image;\n","import ReactCardFlip from 'react-card-flip';\nimport { useState, useEffect } from 'react';\nimport Image from 'components/image/image';\n\nimport './styles.css';\n\ninterface Props {\n  imageName: string;\n  open: boolean;\n  clickHandler: () => void;\n}\n\nconst Card: React.FC<Props> = ({ imageName, open, clickHandler }) => {\n  const [flipped, setFlipped] = useState(open);\n\n  const imageClicked = () => {\n    clickHandler();\n    setFlipped((prevState) => !prevState);\n  };\n\n  useEffect(() => {\n    setFlipped(open);\n  }, [open]);\n\n  return (\n    <div className=\"card-component\">\n      <ReactCardFlip isFlipped={flipped} infinite={true}>\n        <Image name=\"back\" clickedHandler={imageClicked} />\n        <Image name={imageName} clickedHandler={imageClicked} />\n      </ReactCardFlip>\n    </div>\n  );\n};\n\nexport default Card;\n","export const getImagesName = () => {\n  let list = [];\n\n  for (let counter = 0; counter < 9; counter++) {\n    list.push(`${counter+1}`)\n  }\n  return list;\n}\n\nexport const doubleArray = (array: string[]) => {\n  return [...array, ...array]\n}\n\n//https://bost.ocks.org/mike/shuffle/\n\nexport const fisherYatesShuffleArray = (array: string[]) => {\n  let arrayCopy = [...array];\n  for (let i = arrayCopy.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [arrayCopy[i], arrayCopy[j]] = [arrayCopy[j], arrayCopy[i]];\n  }\n\n  return arrayCopy;\n}\n\nexport const arrayToCardObject = (imagesList: string[]) => {\n  return imagesList.map((imageName: string, key: number) => ({\n    key,\n    name: imageName,\n    open: false,\n    matched: false,\n  }))\n}","import { useState, useEffect, useCallback } from 'react';\nimport flow from 'lodash/flow';\n\nimport Card from 'components/card/card';\nimport {\n  getImagesName,\n  doubleArray,\n  fisherYatesShuffleArray,\n  arrayToCardObject,\n} from './util';\nimport './styles.css';\n\ninterface KeyName {\n  key: number;\n  name: string;\n}\n\ninterface Image extends KeyName {\n  open: boolean;\n  matched: boolean;\n}\n\nconst Cards: React.FC = () => {\n  const [imagesList, setImagesList] = useState<Image[]>();\n\n  const setMatched = (toMatch: KeyName) => {\n    setImagesList((prevList) => {\n      return (\n        prevList &&\n        prevList.map((image) => {\n          if (toMatch.name === image.name) {\n            return {\n              ...image,\n              matched: true,\n            };\n          } else return image;\n        })\n      );\n    });\n  };\n\n  const closeUnmatchedOpened = (toCloseList: KeyName[]) => {\n    const keyList = toCloseList.map((item) => item.key);\n\n    const closeTimeout = setTimeout(() => {\n      setImagesList((prevList) => {\n        return (\n          prevList &&\n          prevList.map((image, key) => {\n            if (keyList.includes(key)) {\n              return {\n                ...image,\n                open: false,\n              };\n            } else return image;\n          })\n        );\n      });\n      clearTimeout(closeTimeout);\n    }, 1000);\n  };\n\n  const matchChecker = useCallback((openedAndUnmatched) => {\n    const matched = openedAndUnmatched[0].name === openedAndUnmatched[1].name;\n    if (matched) {\n      setMatched(openedAndUnmatched[0]);\n    } else {\n      closeUnmatchedOpened(openedAndUnmatched);\n    }\n  }, []);\n\n  const flipCard = (index: number) => {\n    setImagesList((prevList) => {\n      if (!prevList) return [];\n      const listCopy = [...prevList];\n      const toChangeObject = prevList[index];\n      listCopy[index] = {\n        ...listCopy[index],\n        open: !toChangeObject.open,\n      };\n\n      return listCopy;\n    });\n  };\n\n  useEffect(() => {\n    const openedAndUnmatched: KeyName[] = [];\n    imagesList?.every((image, key) => {\n      if (!image.matched && image.open) {\n        openedAndUnmatched.push({ key, name: image.name });\n        return true;\n      } else if (openedAndUnmatched.length === 2) {\n        return false;\n      }\n      return true;\n    });\n\n    if (openedAndUnmatched.length === 2) {\n      matchChecker(openedAndUnmatched);\n    }\n  }, [imagesList, matchChecker]);\n\n  useEffect(() => {\n    const cardList = flow([\n      getImagesName,\n      doubleArray,\n      fisherYatesShuffleArray,\n      arrayToCardObject,\n    ])();\n    setImagesList(cardList);\n  }, []);\n\n  return (\n    <div className=\"cards-component\">\n      {imagesList &&\n        imagesList.map((item, index) => {\n          return (\n            <Card\n              key={item.key}\n              imageName={item.name}\n              open={item.matched || item.open}\n              clickHandler={() => flipCard(index)}\n            />\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Cards;\n","import './styles.css';\nimport Cards from 'components/cards/cards';\n\nconst FlipPage: React.FC = () => {\n  return (\n    <div className=\"flippage-container\">\n      <Cards />\n    </div>\n  );\n};\n\nexport default FlipPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FlipPage from './containers/flipPage/flipPage';\nimport './App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <FlipPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}